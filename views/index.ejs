<!DOCTYPE html>
<html lang="en">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<head>
    <meta charset="UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link rel="preconnect" href="https://fonts.gstatic.com"/>
    <link
            href="https://fonts.googleapis.com/css2?family=Oswald:wght@400;700&display=swap"
            rel="stylesheet"/>
    <link
            href="https://fonts.googleapis.com/icon?family=Material+Icons"
            rel="stylesheet"/>
    <link rel="stylesheet" href="/css/styles.css"/>
    <title>Contacts</title>
</head>
<body>
<header>
    <h1>Contacts List</h1>
</header>
<main>
    <form class="form">
        <input type="text" placeholder="Name" id="name" value=""/>
        <input type="number" placeholder="Number" id="number" value=""/>
        <input type="text" placeholder="Address" id="address" value=""/>
        <button class="button" id="add">Add New Contact</button>
        <button class="button" id="edit" style="display: none" onclick="updateContact(event)">Edit Contact</button>
    </form>
    <section class="contacts" id="contact_list">
        <div class="contacts__contact title">
            <p>Name</p>
            <p>Number</p>
            <p>Address</p>
            <span></span>
        </div>
    </section>
</main>
<script>
    const loadContacts = async () => {
        const section = document.getElementById("contact_list");
        section.innerHTML = `
            <div class="contacts__contact title">
                <p>Name</p>
                <p>Number</p>
                <p>Address</p>
                <span></span>
            </div>
        `;

        try {
            const response = await fetch("http://localhost:3000/api/contacts");
            const data = await response.json();
            data.forEach((contact) => {
                const contactDiv = document.createElement("div");
                contactDiv.classList.add("contacts__contact");
                contactDiv.innerHTML = `
                    <p>${contact.name}</p>
                    <p>${contact.number}</p>
                    <p>${contact.address}</p>
                    <span class="material-icons edit" data-id="${contact._id}" onclick="editContact('${contact._id}')">
                        edit
                    </span>
                    <span class="material-icons delete" data-id="${contact._id}" onclick="deleteContact('${contact._id}')">
                        delete
                    </span>
                `;
                section.appendChild(contactDiv);

            });
        } catch (error) {
            console.error(error);
        }
    };

    const addButton = document.getElementById('add');
    const editButton = document.getElementById('edit');

    addButton.addEventListener("click", async (e) => {
        e.preventDefault();
        const contactName = document.getElementById('name');
        const number = document.getElementById('number');
        const address = document.getElementById('address');

        if (contactName.value === "" || number.value === "" || address.value === "") {
            return (
                Swal.fire({
                    title: 'Error',
                    text: 'You must fill out all the fields',
                    icon: 'error',
                    confirmButtonText: 'Accept',
                })
            );
        }

        try {
            const response = await fetch("http://localhost:3000/api/contacts", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    name: contactName.value,
                    number: number.value,
                    address: address.value,
                }),
            });

            if (response.ok) {
                Swal.fire({
                    title: 'Success',
                    text: 'Contact added successfully!',
                    icon: 'success',
                    confirmButtonText: 'Accept',
                })
                contactName.value = "";
                number.value = "";
                address.value = "";

                loadContacts();
            } else {
                Swal.fire({
                    title: 'Error',
                    text: 'Failed to add contact. Please try again.',
                    icon: 'error',
                    confirmButtonText: 'Accept',
                })
            }
        } catch (error) {
            console.error(error);
            Swal.fire({
                title: 'Error',
                text: 'An error occurred. Please check the console for details.',
                icon: 'error',
                confirmButtonText: 'Accept',
            })
        }
    });

    const deleteContact = async (id) => {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes!'
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    const response = await fetch(`http://localhost:3000/api/delete-contact/${id}`, {
                        method: "POST",
                    });
                    if (response.ok) {
                        Swal.fire({
                            title: 'Success',
                            text: 'Contact deleted successfully!',
                            icon: 'success',
                            confirmButtonText: 'Accept',
                        })
                        loadContacts();
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: 'Failed to delete contact. Please try again.',
                            icon: 'error',
                            confirmButtonText: 'Accept',
                        })
                    }
                } catch (error) {
                    console.error(error);
                    Swal.fire({
                        title: 'Error',
                        text: 'An error occurred. Please check the console for details.',
                        icon: 'error',
                        confirmButtonText: 'Accept',
                    })
                }
            }
        })
    };

    const updateContact = async (e) => {
        e.preventDefault();
        const contactName = document.getElementById('name');
        const number = document.getElementById('number');
        const address = document.getElementById('address');
        const id = editButton.getAttribute('data-id');
        try {
            const response = await fetch(`http://localhost:3000/api/edit-contact/${id}`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    name: contactName.value,
                    number: +number.value,
                    address: address.value,
                }),
            });
            if (response.ok) {
                Swal.fire({
                    title: 'Success',
                    text: 'Contact edited successfully!',
                    icon: 'success',
                    confirmButtonText: 'Accept',
                })
                contactName.value = "";
                number.value = "";
                address.value = "";

                editButton.removeAttribute('data-id');

                addButton.style.display = 'block';
                editButton.style.display = 'none';

                loadContacts();
            } else {
                Swal.fire({
                    title: 'Error',
                    text: 'Failed to edit contact. Please try again.',
                    icon: 'error',
                    confirmButtonText: 'Accept',
                })
            }
        } catch (error) {
            console.error(error);
            Swal.fire({
                title: 'Error',
                text: 'An error occurred. Please check the console for details.',
                icon: 'error',
                confirmButtonText: 'Accept',
            })
        }
    }

    const editContact = async (id) => {
        const contactName = document.getElementById('name');
        const number = document.getElementById('number');
        const address = document.getElementById('address');

        addButton.style.display = 'none';
        editButton.style.display = 'block';
        editButton.setAttribute('data-id', id);

        try {
            const response = await fetch(`http://localhost:3000/api/contact/${id}`);
            const data = await response.json();
            contactName.value = data.name;
            number.value = data.number;
            address.value = data.address;
        } catch (error) {
            console.error(error);
            Swal.fire({
                title: 'Error',
                text: 'An error occurred. Please check the console for details.',
                icon: 'error',
                confirmButtonText: 'Accept',
            })
        }
    };

    loadContacts();
</script>
</body>
</html>
